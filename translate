#!/usr/bin/env python

import sys
import re

def load_seq_from_fasta():
	seq = sys.stdin.read()
	patern = r'^>.*$'
	filtered_seq = re.sub(patern, '', seq, flags=re.MULTILINE)
	filtered_seq = filtered_seq.lower().strip('\n').replace('\n','')
	return filtered_seq

seq = load_seq_from_fasta()

# Dictionary to map codons to amino acids
codon_to_amino_acid = {
    # Codons starting with 'T'
    'ttt': 'F', 'ttc': 'F', 'tta': 'L', 'ttg': 'L',
    'tct': 'S', 'tcc': 'S', 'tca': 'S', 'tcg': 'S',
    'tat': 'Y', 'tac': 'Y', 'taa': '*', 'tag': '*',
    'tgt': 'C', 'tgc': 'C', 'tga': '*', 'tgg': 'W',

    # Codons starting with 'C'
    'ctt': 'L', 'ctc': 'L', 'cta': 'L', 'ctg': 'L',
    'cct': 'P', 'ccc': 'P', 'cca': 'P', 'ccg': 'P',
    'cat': 'H', 'cac': 'H', 'caa': 'Q', 'cag': 'Q',
    'cgt': 'R', 'cgc': 'R', 'cga': 'R', 'cgg': 'R',

    # Codons starting with 'A'
    'att': 'I', 'atc': 'I', 'ata': 'I', 'atg': 'M',
    'act': 'T', 'acc': 'T', 'aca': 'T', 'acg': 'T',
    'aat': 'N', 'aac': 'N', 'aaa': 'K', 'aag': 'K',
    'agt': 'S', 'agc': 'S', 'aga': 'R', 'agg': 'R',

    # Codons starting with 'G'
    'gtt': 'V', 'gtc': 'V', 'gta': 'V', 'gtg': 'V',
    'gct': 'A', 'gcc': 'A', 'gca': 'A', 'gcg': 'A',
    'gat': 'D', 'gac': 'D', 'gaa': 'E', 'gag': 'E',
    'ggt': 'G', 'ggc': 'G', 'gga': 'G', 'ggg': 'G'
}

def translate(seq): # function that translates bases to AAs, strating the translation on position 0,1,2. Returns translated seq in FASTA format and the coresponding list of triplets. 
	n=3
	triplets_01 = [seq[i:i+n] for i in range(0, len(seq), n)] # we don't know where the translation exactly strarts
	triplets_02 = [seq[i:i+n] for i in range(1, len(seq), n)]
	triplets_03 = [seq[i:i+n] for i in range(2, len(seq), n)]
	posibilities = [triplets_01,triplets_02,triplets_03]
	for triplets in posibilities:
		result = '> transaltion\n'
		for triplet in triplets:
			if len(triplet) < 3: #filters out noncoding suffix of sequence
				break
			result += codon_to_amino_acid[triplet]
		# result += '\n'
		yield result#, triplet

for i in translate(seq):
	print( i)