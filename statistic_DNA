#!/usr/bin/env python

import sys
import hashlib
import re

def load_seq_from_fasta():
	seq = sys.stdin.read()
	patern = r'^>.*$'
	filtered_seq = re.sub(patern, '', seq, flags=re.MULTILINE)
	filtered_seq = filtered_seq.lower().strip('\n').replace('\n','')
	return filtered_seq
# print(filtered_seq) #visual control

a_count = 0
c_count = 0
g_count = 0
t_count = 0
total_count = 0

filtered_seq = load_seq_from_fasta()

for symbol in filtered_seq:
	if symbol.upper() in ('A','C','G','T'):
		total_count += 1
	match symbol.upper():
		case 'A':
			a_count += 1
		case 'G':
			g_count += 1
		case 'T':
			t_count += 1
		case 'C':
			c_count += 1

print(f'Sequence length: {len(filtered_seq)}')
print(f'A fraction = {a_count/total_count:.3}')
print(f'C fraction = {c_count/total_count:.3}')
print(f'G fraction = {g_count/total_count:.3}')
print(f'T fraction = {t_count/total_count:.3}')
print(f'Sum of fractions: {a_count/total_count+c_count/total_count+g_count/total_count+t_count/total_count:.3}')
print(f'Hash: {hashlib.md5(filtered_seq.lower().encode()).hexdigest()}')